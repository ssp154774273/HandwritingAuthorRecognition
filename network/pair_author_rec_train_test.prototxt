name: "AuthorRecNet"
layer {
  name: "pair_data"
  type: "Data"
  top: "pair_data"
  top: "sim"
  include {
    phase: TRAIN
  }
  data_param {
    # source: "data/train_db"
    source: "data/pairs_train_lmdb"
    batch_size: 25
    #backend: LEVELDB
	backend: LMDB
  }
    transform_param {
    mean_file: "data/pairs_train_mean.binaryproto"
	scale: 0.00390625
	
	#mean_value: 26	
	#scale: 0.0175438
  }
}
layer {
  name: "pair_data"
  type: "Data"
  top: "pair_data"
  top: "sim"
  include {
    phase: TEST
  }
  data_param {
    # source: "data/test_db"
    source: "data/pairs_test_lmdb"
    batch_size: 25
    # backend: LEVELDB
	backend: LMDB
  }
  transform_param {
    mean_file: "data/pairs_test_mean.binaryproto"
	scale: 0.00390625
  }
}
layer {
  name: "slice_pair"
  type: "Slice"
  bottom: "pair_data"
  top: "data"
  top: "data_p"
  slice_param {
    slice_dim: 1
    slice_point: 1
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  bottom: "data_p"
  top: "conv1"
  top: "conv1_p"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 18
    kernel_size: 6
    stride: 1
	weight_filler {
      type: "xavier"
    }
	bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "pool1_p"
  type: "Pooling"
  bottom: "conv1_p"
  top: "pool1_p"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  bottom: "pool1_p"
  top: "conv2"
  top: "conv2_p"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 7
    kernel_size: 4
    stride: 1
	weight_filler {
      type: "xavier"
    }
	bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "pool2_p"
  type: "Pooling"
  bottom: "conv2_p"
  top: "pool2_p"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "fc1"
  type: "InnerProduct"
  param { name: "ip1_w"    lr_mult: 1  }
  param { name: "ip1_b"    lr_mult: 2  }
  inner_product_param {
    num_output: 256
	weight_filler {
      type: "xavier"
    }
	bias_filler {
      type: "constant"
      value: 0
    }
  }
  bottom: "pool2"
  top: "fc1"
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "fc1"
  top: "fc1"
}
layer {
  name: "descriptor"
  type: "InnerProduct"
  param { name: "ip2_w"    lr_mult: 1  }
  param { name: "ip2_b"    lr_mult: 2  }
  inner_product_param {
    num_output: 16
	weight_filler {
      type: "xavier"
    }
	bias_filler {
      type: "constant"
    }
  }
  bottom: "fc1"
  top: "descriptor"
}
layer {
  name: "fc1_p"
  type: "InnerProduct"
  param { name: "ip1_w"    lr_mult: 1  }
  param { name: "ip1_b"    lr_mult: 2  }
  inner_product_param {
    num_output: 256
	weight_filler {
      type: "xavier"
    }
	bias_filler {
      type: "constant"
    }
  }
  bottom: "pool2_p"
  top: "fc1_p"
}

layer {
  name: "relu1_p"
  type: "ReLU"
  bottom: "fc1_p"
  top: "fc1_p"
}
layer {
  name: "descriptor_p"
  type: "InnerProduct"
  param { name: "ip2_w"    lr_mult: 1  }
  param { name: "ip2_b"    lr_mult: 2  }
  inner_product_param {
    num_output: 16
	weight_filler {
      type: "xavier"
    }
	bias_filler {
      type: "constant"
      value: 0
    }
  }
  bottom: "fc1_p"
  top: "descriptor_p"
}
layer {
  name: "loss"
  type: "ContrastiveLoss"
  bottom: "descriptor"
  bottom: "descriptor_p"
  bottom: "sim"
  top: "loss"
  contrastive_loss_param {
    margin: 1
  }
}